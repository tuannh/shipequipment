@model IEnumerable<ShipEquipment.Biz.Domain.Page>
@using ShipEquipment.Core.Enumerations

@{
    var pageAlias = "index";
    if (ShipEquipment.Core.SiteContext.Current.RouteData.Values["frontendpage"] != null)
    {
        pageAlias = ShipEquipment.Core.SiteContext.Current.RouteData.Values["frontendpage"].ToString();
    }
    var count = Model.Count();
    var index = 1;

    var newsCategory = ViewBag.NewsCategory as IEnumerable<ShipEquipment.Biz.Domain.NewsCategory>;
    var productCategory = ViewBag.ProductCategory as IEnumerable<ShipEquipment.Biz.Domain.Category>;

    var cateAlias = Html.ViewContext.RouteData.Values["newscategoryalias"] as string;
}


<ul class="nav-list">
    @if (Model != null)
    {
        foreach (var page in Model)
        {
            var active = string.Compare(page.Alias, pageAlias, true) == 0 || string.IsNullOrEmpty(pageAlias) ? "class='active'" : "";
            var last = index == count ? "last" : "";
            index++;

            <li class="nav-item @last">
                <a href="/@page.Alias" title="@page.Name" @Html.Raw(active)>@page.Name</a>
                @if (string.Compare(page.Alias, "tin/tin-tuc", true) == 0 && newsCategory != null)
                {
                    <ul class="nav-submenu">
                        @foreach (var cate in newsCategory)
                        {
                            var activeCate = string.Compare(cateAlias, cate.Alias, true) == 0 ? "active" : "";
                            <li class="nav-submenu-item">
                                <a class="@activeCate" href="/tin/@cate.Alias">@cate.Name</a>
                            </li>
                        }
                    </ul>
                }
                else if (string.Compare(page.UniqueKey, PageType.Product.ToString(), true) == 0 && productCategory != null)
                {
                    <ul class="nav-submenu">
                        @foreach (var cate in productCategory)
                        {
                            @ViewCategory(cate)
                            
                            @*var activeCate = string.Compare(cateAlias, cate.Alias, true) == 0 ? "active" : "";
                            <li class="nav-submenu-item">
                                <a class="@activeCate" href="/san-pham/@cate.Alias">@cate.Name</a>
                            </li>*@
                        }
                    </ul>
                }
            </li>
        }
    }
</ul>

@helper ViewCategory(Category cate)
{
    if (cate != null)
    {
        var lst = cate.GetSubCategory();
        <li class="nav-submenu-item">
            <a href="/danh-muc/@cate.Alias">
                @cate.Name
            </a>
            @if (lst != null)
            {
                <ul class="nav-submenu2">
                    @foreach (var category in lst)
                    {
                        @ViewCategory(category)
                    }
                </ul>
            }
        </li>
    }
}