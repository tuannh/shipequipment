@model ShipEquipment.Biz.Domain.Product

@{
    ViewBag.Title = "Thêm sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/Layouts/Edit.cshtml";
    var types = new List<SelectListItem>()
        {
            new SelectListItem() { Value = "1", Text= "Sản phẩm mới" },
            new SelectListItem() { Value = "2", Text= "Sản phẩm ký gởi" },
            new SelectListItem() { Value = "3", Text= "Sản phẩm ký gởi" },
            new SelectListItem() { Value = "4", Text= "Sản phẩm bán chạy" }
        };
}

<h1>Thêm sản phẩm</h1>

@using (Html.BeginForm("create", "product", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="error">
        @ViewBag.Error
        @Html.ValidationSummary(true)
    </div>

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alias, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Alias, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "myeditor" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active)
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalePrice, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MadeIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MadeIn, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MadeIn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DislayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DislayOrder, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DislayOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrandId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, types)
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <a href="javascript:void(0);" class="view-photo">Product photo</a>
        <div class="frm-photo" title="Photo list" style="display: none; width: 80%; min-height: 500px;">
            <table class="photo-list" style="width: 100%;">
                <tr>
                    <td>Title</td>
                    <td style="width: 300px;"> Photo</td>
                    <td style="width: 80px;">Thứ tự hiển thị</td>
                    <td class="colLeft"></td>
                </tr>
            </table>
            <div id="tmp-container" style="display: none;"></div>
            <b>Thêm photo</b>
            <table>
                <tr>
                    <td>
                        Tiêu đề
                    </td>
                    <td>
                        <input name="title" id="title" type="text" />
                    </td>
                </tr>
                <tr>
                    <td>
                        Thứ tự hiển thị
                    </td>
                    <td>
                        <input name="displayOrder" id="displayOrder" type="number" />
                    </td>
                </tr>
                <tr>
                    <td>
                        Photo
                    </td>
                    <td>
                        <input type="file" name="file" id="file" />
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td>
                        <input type="button" class="btn-add-photo" value="Thêm photo" />
                    </td>
                </tr>
            </table>
        </div>

        <input type="text" name="Photos[0].Title" value="Title 1" />
        <input type="text" name="Photos[0].FileName" value="FileName.png" />
        <input type="text" name="Photos[0].DisplayOrder" value="23" />

        <input type="text" name="Photos[1].Title" value="Title 2" />
        <input type="text" name="Photos[1].FileName" value="FileName2.png" />
        <input type="text" name="Photos[1].DisplayOrder" value="234" />



        <div class="form-group">
            <label>&nbsp;</label>
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm" class="btnAdd" />
                <input type="reset" value="Reset" class="btnCancel" />
                <input type="button" value="Bỏ qua" class="btnCancel btnDiscard" data-href="/admin/product/" />
            </div>
        </div>
    </div>
}

<link href="~/Css/jquery/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery/jquery-ui.js"></script>
<script src="~/Scripts/jquery/jquery.loadTemplate-1.4.5.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        $('#Name').blur(function () {
            AutoGenerateAlias(this.value, 'Alias', true);
        })

        $('.btnDiscard').click(function () {
            location.href = $(this).attr('data-href');
        })

        $('.myeditor').clawEditor('standard');

        $('.view-photo').click(function () {
            $('.frm-photo').dialog({ minWidth: 800, minHeight: 400 });
        })

        $('.btn-add-photo').click(function () {

            var formData = new FormData();
            formData.append("file", $("#file")[0].files[0]);
            formData.append("title", $('#title').val());
            formData.append("displayOrder", $('#displayOrder').val());

            $.ajax({
                async: true,
                type: 'POST',
                url: '/admin/product/uploadfile/',
                data: formData,
                success: function (data) {
                    var index = $('.photo-list tr').length - 1;
                    data.titlename = "Photos[" + index + "].Title";
                    data.src = "/Userfiles/_temp/Modules/Product/thumb/" + data.filename;
                    var html = $('#tmp-container').loadTemplate($('#template'), data).html();
                    $('.photo-list').append(html);
                },
                cache: false,
                contentType: false,
                processData: false
            });
        })
    })
</script>

<script type="text/html" id="template">

    <tr>
        <td data-content="title">
            <input name="Photos[0].Title" value="title 1" type="hidden" />
            <input name="Photos[0].FileName" value="title-1.jpg" type="hidden" />
            <input name="Photos[0].DisplayOrder" value="231" type="hidden" />
        </td>
        <td>
            <img data-src="src" data-alt="title" />
        </td>
        <td>
            <input type="number" style="width: 50px;" data-content="displayorder" />
        </td>
        <td>
            <a href="#">Xóa</a>
        </td>
    </tr>
</script>